; c = a + b;
;
; assign

mov rb, [a]
add rb, [b]
mov ra, rb
mov [c],ra

; d = c * (b + a + c) * (d / e)
; * * c + a b / d e

mov ra, [b] ;

mov rb, ra  ;;

mov ra, [a] ;

sum rb, ra  ;;

mov ra, [c] ;

sum rb, ra  ;;
mov ra, rb

mov rb, ra  ;;;

mov ra, [c] ;

mul rb, ra  ;;;

mov ra, [d] ;

mov rb, ra  ;;

mov ra, [e] ;

div rb, ra  ;;
mov ra, rb

mul rb, ra  ;;;
mov ra, rb



; while (expr) {
;   c;
; }

beg:
; calc expr to ra
cmp ra, 0
jne end
; exec blk
jmp beg
end:



; begin of a func
func_beg:
add rf, SMTH
; pop args



; c * (b + a + d) * (a - b)

push [c] ;;

push [b] ;;;

push [a] ;;;

add ;;

push [d] ;;;

add ;;

mul ;

push [a] ;;;

push [b] ;;;

sub ;

mul ;


;;;;;;;;
; mul
; get left arg
; get right arg
mul
